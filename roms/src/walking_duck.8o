: duck_body
	0x00 0x00 0x18 0x28 0x1C 0x00 0x00 0x00
	
: duck_feet_standing 
 	0x00 0x00 0x00 0x00 0x00 0x28 0x00 0x00

: duck_feet_walking_1
	0x00 0x00 0x00 0x00 0x20 0x08 0x00 0x00

: duck_feet_walking_2
	0x00 0x00 0x00 0x00 0x00 0x20 0x00 0x00
	
:alias k 		v0
:alias px 	v1
:alias py 	v2
:alias walk_state v3
:alias prev_state v4

: update_walk_state
	if walk_state == 2 begin walk_state := 1
	else walk_state += 1 end
return

: draw_duck
	i := duck_body
	sprite px py 8
	
	if walk_state == 0 then i := duck_feet_standing
	if walk_state == 1 then i := duck_feet_walking_1
	if walk_state == 2 then i := duck_feet_walking_2
	sprite px py 8
return 

: draw_standing_duck
	if walk_state != 0 begin
		draw_duck
		walk_state := 0
		draw_duck
	end
return

: move_left
	if px == 0 begin
		draw_standing_duck
	else
		draw_duck
		px -= 8
		update_walk_state
		draw_duck
	end
return 

: move_right
	if px == 56 begin
		draw_standing_duck
	else
		draw_duck
		px += 8
		update_walk_state
		draw_duck
	end
return 

: move_up
	if py == 0 begin
		draw_standing_duck
	else
		draw_duck
		py -= 8
		update_walk_state
		draw_duck
	end
return 

: move_down
	if py == 24 begin
		draw_standing_duck
	else
		draw_duck
		py += 8
		update_walk_state
		draw_duck
	end
return 

: passive_input_update_player
	prev_state := walk_state
		
	k := 7
	if k key then move_left
	
	k := 9
	if k key then move_right

	k := 5
	if k key then move_up

	k := 8
	if k key then move_down
	
	if prev_state == walk_state then draw_standing_duck
return

: wait_for_input_update_player
	k := key
	if k == 7 then move_left
	if k == 9 then move_right
	if k == 5 then move_up
	if k == 8 then move_down
return

: main_loop	
	loop
		vf := 12
		delay := vf
		
#		wait_for_input_update_player
		passive_input_update_player

		loop
			vf := delay
			if vf != 0 then
		again
	again
return 

: main
	clear
	
	px := 0
	py := 0
	walk_state := 0
	draw_duck
	
	main_loop
return
