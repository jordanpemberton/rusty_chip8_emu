: bug_0_left
	0x00 0x00 0x00 0x38 0x28 0x3C 0x00 0x00

: bug_1_left
	0x00 0x00 0x38 0x28 0x38 0x1C 0x00 0x00

: bug_2_left
	0x00 0x00 0x38 0x28 0x38 0x1C 0x00 0x00

: bug_0_right
	0x00 0x00 0x00 0x1C 0x14 0x3C 0x00 0x00

: bug_1_right
	0x00 0x00 0x1C 0x14 0x1C 0x38 0x00 0x00

: bug_2_right
	0x00 0x00 0x1C 0x14 0x1C 0x38 0x00 0x00


:alias k 		v0
:alias px 	v1
:alias py 	v2
:alias bug_state v3
:alias prev_state v4

: draw_bug
	if bug_state == 0 then i := bug_0_left
	if bug_state == 1 then i := bug_1_left
	if bug_state == 2 then i := bug_2_left
	if bug_state == 3 then i := bug_0_right
	if bug_state == 4 then i := bug_1_right
	if bug_state == 5 then i := bug_2_right

	sprite px py 8
return

: move_left
	if px != 0 begin
		draw_bug
		px -= 8
		
		prev_state := bug_state
		if prev_state == 0 then bug_state := 2
		if prev_state == 1 then bug_state := 0
		if prev_state == 2 then bug_state := 0
		if prev_state == 3 then bug_state := 2
		if prev_state == 4 then bug_state := 0
		if prev_state == 5 then bug_state := 0

		draw_bug
	end
return

: move_right
	if px != 56 begin
		draw_bug
		px += 8
		
		prev_state := bug_state
		if prev_state == 0 then bug_state := 5
		if prev_state == 1 then bug_state := 3
		if prev_state == 2 then bug_state := 3
		if prev_state == 3 then bug_state := 5
		if prev_state == 4 then bug_state := 3
		if prev_state == 5 then bug_state := 3
		
		draw_bug
	end
return 

: move_up
	if py != 0 begin
		draw_bug
		py -= 8
		
		prev_state := bug_state
		if prev_state == 0 then bug_state := 2
		if prev_state == 1 then bug_state := 0
		if prev_state == 2 then bug_state := 0
		if prev_state == 3 then bug_state := 5
		if prev_state == 4 then bug_state := 3
		if prev_state == 5 then bug_state := 3

		draw_bug
	end
return 

: move_down
	if py != 24 begin
		draw_bug
		py += 8

		prev_state := bug_state
		if prev_state == 0 then bug_state := 2
		if prev_state == 1 then bug_state := 0
		if prev_state == 2 then bug_state := 0
		if prev_state == 3 then bug_state := 5
		if prev_state == 4 then bug_state := 3
		if prev_state == 5 then bug_state := 3

		draw_bug
	end
return 

: idle_bug
	draw_bug
	
	prev_state := bug_state
	if prev_state == 0 then bug_state := 1
	if prev_state == 1 then bug_state := 0
	if prev_state == 2 then bug_state := 0
	if prev_state == 3 then bug_state := 4
	if prev_state == 4 then bug_state := 3
	if prev_state == 5 then bug_state := 3

	draw_bug
return

: passive_input_update_bug
	prev_state := bug_state

	k := 7
	if k key then move_left
	
	k := 9
	if k key then move_right

	k := 5
	if k key then move_up

	k := 8
	if k key then move_down
	
	if prev_state == bug_state begin
		idle_bug
	end
	
return

: wait_for_input_update_bug
	k := key
	if k == 7 then move_left
	if k == 9 then move_right
	if k == 5 then move_up
	if k == 8 then move_down
return

: main_loop	
	loop
		vf := 12
		delay := vf
		
#		wait_for_input_update_bug
		passive_input_update_bug

		loop
			vf := delay
			if vf != 0 then
		again
	again
return 

: place_player
	px := 0
	py := 0
	bug_state := 3
	draw_bug
return

: main
	clear
	
	place_player
	
	main_loop
	
return
